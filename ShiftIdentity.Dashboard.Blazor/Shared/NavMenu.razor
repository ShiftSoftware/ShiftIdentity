@using Pages.User
@using Pages.App
@using Pages.AccessTree

@inject ShiftIdentityDashboardBlazorOptions ShiftIdentityDashboardBlazorOptions
@inject TypeAuthService TypeAuthService

<MudNavMenu>
    @if (ShiftIdentityDashboardBlazorOptions.ShiftIdentityHostingType == ShiftIdentityHostingTypes.External)
    {
        <AuthorizedMudNavLink Href="@($"{Constants.IdentityRoutePreifix}/{nameof(AppList)}")"
                              Match="NavLinkMatch.All"
                              Icon="@Icons.Material.Outlined.Apps"
                              TypeAuthAction="ShiftIdentityActions.Apps">Apps</AuthorizedMudNavLink>

    }

    <AuthorizedMudNavLink Href="@($"{Constants.IdentityRoutePreifix}/{nameof(AccessTreeList)}")"
                          Match="NavLinkMatch.All"
                          Icon="@Icons.Material.Outlined.AccountTree"
                          TypeAuthAction="ShiftIdentityActions.AccessTrees">Access Trees</AuthorizedMudNavLink>

    <AuthorizedMudNavLink Href="@($"{Constants.IdentityRoutePreifix}/{nameof(UserList)}")"
                          Match="NavLinkMatch.All"
                          Icon="@Icons.Material.Outlined.People"
                          TypeAuthAction="ShiftIdentityActions.Users">Users</AuthorizedMudNavLink>
</MudNavMenu>

@code {
    [Parameter] public bool isDrawerOpen { get; set; }
}
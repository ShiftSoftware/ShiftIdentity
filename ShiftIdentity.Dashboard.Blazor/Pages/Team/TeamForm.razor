@using ShiftSoftware.ShiftBlazor.Enums
@using ShiftSoftware.ShiftEntity.Model.Dtos
@using ShiftSoftware.ShiftIdentity.Core.DTOs.Team
@using ShiftSoftware.ShiftIdentity.Core.DTOs.Company
@using ShiftSoftware.ShiftIdentity.Core.DTOs.CompanyBranch
@attribute [Authorize]
@layout Shared.DefaultLayout



@attribute [Route($"{Constants.IdentityRoutePreifix}/{nameof(TeamForm)}/{{Key?}}")]
@inherits ShiftForm<TeamForm, ShiftSoftware.ShiftIdentity.Core.DTOs.Team.TeamDTO>
@inject HttpClient Http
@inject ODataQuery odataQuery
@inject ShiftIdentityLocalizer Loc
@inject ShiftIdentityDashboardBlazorOptions Options

<ShiftEntityForm @bind-Mode="Mode"
                 @bind-Value="TheItem"
                 @ref="FormContainer"
                 Endpoint="@($"{Constants.IdentityRoutePreifix}Team")"
                 Title="@Loc["Team"]"
                 @bind-Key="@Key"
                 TypeAuthAction="ShiftIdentityActions.Teams"
                 T="ShiftSoftware.ShiftIdentity.Core.DTOs.Team.TeamDTO">
    <MudGrid Spacing="4">
        <MudItem lg="4" md="12" sm="12" xs="12">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Team Name"]"
                          @bind-Value="TheItem.Name"
                          For="@(() => TheItem.Name)" />
        </MudItem>
        <MudItem lg="4" md="12" sm="12" xs="12">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Integration ID"]"
                          @bind-Value="TheItem.IntegrationId"
                          For="@(() => TheItem.IntegrationId)" />
        </MudItem>
        <MudItem lg="4" md="12" sm="12" xs="12">
            <ShiftAutocomplete Label="@Loc["Company"]"
                               For="@(() => TheItem.Company)"
                               Value="TheItem.Company"
                               ValueChanged="(v) => { TheItem.Company = v; TheItem.CompanyBranches = new(); TheItem.Users = new(); }"
                               EntitySet="IdentityCompany"
                               TEntitySet="CompanyListDTO" />
        </MudItem>
        <MudItem lg="12" md="12" sm="12" xs="12">
            <ShiftAutocomplete Label="@Loc["Company Branch"]"
                               TEntitySet="CompanyBranchListDTO"
                               Filter="@(x=> x.Add(nameof(CompanyBranchListDTO.CompanyId), ShiftBlazor.Enums.ODataOperator.Equal, TheItem.Company.Value))"
                               Disabled="TheItem.Company == null"
                               @bind-SelectedValues="TheItem.CompanyBranches"
                               EntitySet="IdentityCompanyBranch"
                               MultiSelect />
        </MudItem>

        <MudItem lg="12" md="12" sm="12" xs="12">
            <ShiftAutocomplete Label="@Loc["Users"]"
                               TEntitySet="UserListDTO"
                               Filter="@(x=> x.Add(nameof(UserListDTO.CompanyID), ShiftBlazor.Enums.ODataOperator.Equal, TheItem.Company.Value))"
                               Disabled="TheItem.Company == null"
                               @bind-SelectedValues="TheItem.Users"
                               EntitySet="IdentityUser"
                               MultiSelect />
        </MudItem>

        <MudItem lg="12" md="12" sm="12" xs="12">
            <MudSelectExtended MultiSelection="true"
                               OnlyValidateIfDirty="true"
                               @bind-SelectedValues="TheItem.Tags"
                               T="string"
                               Label="@Loc["Tags"]">
                @foreach (var state in Options.TeamTags)
                {
                    <MudSelectItem T="string" Value="@state">@state</MudSelectItem>
                }
            </MudSelectExtended>
        </MudItem>
    </MudGrid>
</ShiftEntityForm>
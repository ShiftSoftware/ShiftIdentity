@attribute [Authorize]
@layout Shared.DefaultLayout
@attribute [Route($"{Constants.IdentityRoutePreifix}/{nameof(CompanyForm)}/{{Key?}}")]
@inherits ShiftForm<CompanyForm, ShiftSoftware.ShiftIdentity.Core.DTOs.Company.CompanyDTO>
@inject HttpClient Http
@inject ShiftIdentityDashboardBlazorOptions Options

@using ShiftSoftware.ShiftEntity.Model.Enums


<ShiftEntityForm @bind-Mode="Mode"
                 @bind-Value="TheItem"
                 @ref="FormContainer"
                 Action="@($"{Constants.IdentityRoutePreifix}Company")"
                 Title="Company"
                 @bind-Key="@Key"
                 OnTaskFinished="OnTaskFinished"
                 TypeAuthAction="ShiftIdentityActions.Companies"
                 T="ShiftSoftware.ShiftIdentity.Core.DTOs.Company.CompanyDTO">


    <MudGrid>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <LocalizedTextField @bind-Value="TheItem.Name" Label="Name" For="() => TheItem.Name" />
        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <LocalizedTextField @bind-Value="TheItem.LegalName" Label="Legal Name" For="() => TheItem.LegalName" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="Short Code"
                          @bind-Value="TheItem.ShortCode"
                          For="@(() => TheItem.ShortCode)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="Externa lId"
                          @bind-Value="TheItem.ExternalId"
                          For="@(() => TheItem.ExternalId)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="Alternative Externa lId"
                          @bind-Value="TheItem.AlternativeExternalId"
                          For="@(() => TheItem.AlternativeExternalId)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudSelect ReadOnly="@ReadOnly"
                       Disabled="@Disabled"
                       OnlyValidateIfDirty="true"
                       T="CompanyTypes"
                       Label="Company Type"
                       @bind-Value="TheItem.CompanyType"
                       ToStringFunc="@(x=> x.Describe())"
                       For="@(() => TheItem.CompanyType)">
                <MudSelectItem Value="@(CompanyTypes.NotSpecified)" />
                <MudSelectItem Value="@(CompanyTypes.DistributorOrFranchisee)" />
                <MudSelectItem Value="@(CompanyTypes.RetailerOrDealer)" />
                <MudSelectItem Value="@(CompanyTypes.SupplierOrServiceProvider)" />
                <MudSelectItem Value="@(CompanyTypes.ThirdPartyOrExternal)" />
                <MudSelectItem Value="@(CompanyTypes.ParentCompanyOrFranchisor)" />
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="HQ Phone"
                          @bind-Value="TheItem.HQPhone"
                          For="@(() => TheItem.HQPhone)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="HQ Email"
                          @bind-Value="TheItem.HQEmail"
                          For="@(() => TheItem.HQEmail)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="HQ Address"
                          @bind-Value="TheItem.HQAddress"
                          For="@(() => TheItem.HQAddress)" />
        </MudItem>

        @if (this.TheItem.CustomFields is not null && this.TheItem.CustomFields?.Count > 0)
        {
            @foreach (var field in this.TheItem.CustomFields)
            {
                <MudItem xs="12" sm="6" lg="3" xl="3">
                    <MudTextField ReadOnly="@ReadOnly"
                                  Disabled="@Disabled"
                                  Label="@field.Value.DisplayName"
                                  InputType="@(field.Value.IsPassword?InputType.Password:InputType.Text)"
                                  @bind-Value="this.TheItem.CustomFields[field.Key].Value" />
                </MudItem>
            }
        }
    </MudGrid>
</ShiftEntityForm>

@code {
    protected override Task OnInitializedAsync()
    {
        this.SetCustomFiles();

        return base.OnInitializedAsync();
    }

    private void OnTaskFinished()
    {
        this.SetCustomFiles();
    }

    private void SetCustomFiles()
    {
        foreach (var field in this.Options.CompanyCustomFields)
        {
            if (this.TheItem.CustomFields?.ContainsKey(field.Key) ?? false)
                this.TheItem.CustomFields[field.Key]?.Set(field.Value);
            else
                this.TheItem.CustomFields?.TryAdd(field.Key, new CustomField(field.Value));
        }
    }
}
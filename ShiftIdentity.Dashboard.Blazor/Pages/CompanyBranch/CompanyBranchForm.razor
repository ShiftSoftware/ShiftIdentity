@attribute [Authorize]
@layout Shared.DefaultLayout
@attribute [Route($"{Constants.IdentityRoutePreifix}/{nameof(CompanyBranchForm)}/{{Key?}}")]
@inherits ShiftForm<CompanyBranchForm, ShiftSoftware.ShiftIdentity.Core.DTOs.CompanyBranch.CompanyBranchDTO>
@inject HttpClient Http
@inject ShiftIdentityDashboardBlazorOptions Options

@inject ODataQuery odataQuery

@using ShiftSoftware.ShiftBlazor.Enums
@using ShiftSoftware.ShiftEntity.Model.Enums
@using ShiftSoftware.ShiftIdentity.Core.DTOs.Brand
@using ShiftSoftware.ShiftIdentity.Dashboard.Blazor.Pages.Brand
@using ShiftSoftware.ShiftIdentity.Dashboard.Blazor.Pages.Department
@using ShiftSoftware.ShiftIdentity.Dashboard.Blazor.Pages.Service
@using ShiftSoftware.ShiftIdentity.Core.DTOs.Company
@using ShiftSoftware.ShiftIdentity.Core.DTOs.City
@using ShiftSoftware.ShiftIdentity.Core.DTOs.Department
@using ShiftSoftware.ShiftIdentity.Core.DTOs.Service
@inject ShiftIdentityLocalizer Loc



<ShiftEntityForm @bind-Mode="Mode"
                 @bind-Value="TheItem"
                 @ref="FormContainer"
                 Action="@($"{Constants.IdentityRoutePreifix}CompanyBranch")"
                 Title="@Loc["Company Branch"]"
                 @bind-Key="@Key"
                 OnTaskFinished="OnTaskFinished"
                 TypeAuthAction="ShiftIdentityActions.Companies"
                 T="ShiftSoftware.ShiftIdentity.Core.DTOs.CompanyBranch.CompanyBranchDTO">
    <MudGrid>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <LocalizedTextField @bind-Value="TheItem.Name" Label="@Loc["Name"]" For="() => TheItem.Name" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Short Code"]"
                          @bind-Value="TheItem.ShortCode"
                          For="@(() => TheItem.ShortCode)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Integration ID"]"
                          @bind-Value="TheItem.IntegrationId"
                          For="@(() => TheItem.IntegrationId)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <ShiftAutocomplete Label="@Loc["Company"]"
                               For="@(() => TheItem.Company)"
                               @bind-Value="TheItem.Company"
                               EntitySet="IdentityCompany"
                               TEntitySet="CompanyListDTO" />
        </MudItem>

        @* <MudItem xs="12" sm="6" lg="4" xl="4">
        <ShiftAutocomplete Label="Region"
        For="@(() => TheItem.Region)"
        T="ShiftSoftware.ShiftEntity.Model.Dtos.ShiftEntitySelectDTO"
        @bind-Value="TheItem.Region"
        ToStringFunc="@(e=> e==null ? null : $"{e.Text}")"
        ODataParameters="@(odataQuery.CreateODataParameterObject<RegionListDTO>("IdentityRegion", "ID", "Name"))"
        TEntitySet="RegionListDTO" />
        </MudItem> *@

        <MudItem xs="12" sm="6" lg="4" xl="3">
            <ShiftAutocomplete Label="@Loc["City"]"
                               For="@(() => TheItem.City)"
                               @bind-Value="TheItem.City"
                               EntitySet="IdentityCity"
                               TEntitySet="CityListDTO" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="4">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Phone"]"
                          @bind-Value="TheItem.Phone"
                          For="@(() => TheItem.Phone)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="4">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Short Phone"]"
                          @bind-Value="TheItem.ShortPhone"
                          For="@(() => TheItem.ShortPhone)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="4">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["HQ Email"]"
                          @bind-Value="TheItem.Email"
                          For="@(() => TheItem.Email)" />
        </MudItem>
        
        <MudItem lg="12" md="12" sm="12" xs="12" Class="">
            <MudCard Elevation="2">
                <MudCardHeader Class="pt-3 pb-3" Style="background: #efefef; border-bottom: 1px solid #e3e3e3;">
                    <CardHeaderContent>
                        <MudText Typo="Typo.subtitle2">@Loc["Phone Numbers"]</MudText>
                    </CardHeaderContent>
                </MudCardHeader>

                <MudCardContent Class="pt-5 pb-5">
                    <MudGrid Spacing="3" Justify="Justify.Center">
                        @foreach (var line in TheItem.Phones)
                        {
                            <MudItem lg="11" md="11" sm="11" xs="11">
                                <MudGrid Spacing="3" Style="align-items: baseline;">
                                    <MudItem Class="pt-1 pb-1" lg="6" md="6" sm="6" xs="6">
                                        <MudTextFieldExtended Label="@Loc["Phone"]"
                                                                 @bind-Value="line.Text"
                                                                 For="() => line.Text" />
                                    </MudItem>

                                    <MudItem Class="pt-1 pb-1" lg="6" md="6" sm="6" xs="6">
                                        <MudSelectExtended OnlyValidateIfDirty="true"
                                                           Label="@Loc["Tag"]"
                                                           @bind-Value="line.Tag"
                                                           For="@(() => line.Tag)"
                                                           AnchorOrigin="Origin.BottomCenter">
                                            @foreach (var tag in this.Options.CompanyBranchPhoneTags)
                                            {
                                                <MudSelectItem Value="@tag" T="string">@tag</MudSelectItem>                                                
                                            }
                                        </MudSelectExtended>
                                    </MudItem>
                                </MudGrid>
                            </MudItem>

                            @if (Mode > FormModes.Archive)
                            {
                                <MudItem lg="1" md="1" sm="1" xs="1">
                                    <MudIconButton ButtonType="ButtonType.Button"
                                                   Style="margin:10px;"
                                                   Variant="Variant.Outlined"
                                                   Color="Color.Error"
                                                   Size="Size.Small"
                                                   OnClick="@(() => TheItem.Phones.Remove(line))"
                                                   Icon="@Icons.Material.Filled.Delete" />
                                </MudItem>
                            }
                        }

                        @if (Mode > FormModes.Archive)
                        {   
                            <MudButton Variant="Variant.Filled"
                                        Color="Color.Info"
                                        Style="margin:auto; margin-top:15px;"
                                        Size="Size.Small"
                                        OnClick="@(() => TheItem.Phones.Add(new()))"
                                        StartIcon="@Icons.Material.Filled.Add">
                                @Loc["Add a Phone Number"]
                            </MudButton>
                        }
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem lg="12" md="12" sm="12" xs="12" Class="">
            <MudCard Elevation="2">
                <MudCardHeader Class="pt-3 pb-3" Style="background: #efefef; border-bottom: 1px solid #e3e3e3;">
                    <CardHeaderContent>
                        <MudText Typo="Typo.subtitle2">@Loc["Email Addresses"]</MudText>
                    </CardHeaderContent>
                </MudCardHeader>

                <MudCardContent Class="pt-5 pb-5">
                    <MudGrid Spacing="3" Justify="Justify.Center">
                        @foreach (var line in TheItem.Emails)
                        {
                            <MudItem lg="11" md="11" sm="11" xs="11">
                                <MudGrid Spacing="3" Style="align-items: baseline;">
                                    <MudItem Class="pt-1 pb-1" lg="6" md="6" sm="6" xs="6">
                                        <MudTextFieldExtended Label="@Loc["Email"]"
                                                              @bind-Value="line.Text"
                                                              For="() => line.Text" />
                                    </MudItem>

                                    <MudItem Class="pt-1 pb-1" lg="6" md="6" sm="6" xs="6">
                                        <MudSelectExtended OnlyValidateIfDirty="true"
                                                           Label="@Loc["Tag"]"
                                                           @bind-Value="line.Tag"
                                                           For="@(() => line.Tag)"
                                                           AnchorOrigin="Origin.BottomCenter">
                                            @foreach (var tag in this.Options.CompanyBranchEmailTags)
                                            {
                                                <MudSelectItem Value="@tag" T="string">@tag</MudSelectItem>
                                            }
                                        </MudSelectExtended>
                                    </MudItem>
                                </MudGrid>
                            </MudItem>

                            @if (Mode > FormModes.Archive)
                            {
                                <MudItem lg="1" md="1" sm="1" xs="1">
                                    <MudIconButton ButtonType="ButtonType.Button"
                                                   Style="margin:10px;"
                                                   Variant="Variant.Outlined"
                                                   Color="Color.Error"
                                                   Size="Size.Small"
                                                   OnClick="@(() => TheItem.Emails.Remove(line))"
                                                   Icon="@Icons.Material.Filled.Delete" />
                                </MudItem>
                            }
                        }

                        @if (Mode > FormModes.Archive)
                        {
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Info"
                                       Style="margin:auto; margin-top:15px;"
                                       Size="Size.Small"
                                       OnClick="@(() => TheItem.Emails.Add(new()))"
                                       StartIcon="@Icons.Material.Filled.Add">
                                @Loc["Add an Email"]
                            </MudButton>
                        }
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <LocalizedTextField @bind-Value="TheItem.WorkingHours" Label="@Loc["Standard Working Hours"]" For="() => TheItem.WorkingHours" />
        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <LocalizedTextField @bind-Value="TheItem.WorkingDays" Label="@Loc["Standard Working Day"]" For="() => TheItem.WorkingDays" />
        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            @* <ShiftAutocomplete Label="Departments"
            @bind-Value="LastSelectedDepartment"
            TEntitySet="DepartmentListDTO"
            EntitySet="IdentityDepartment" /> *@

            <ShiftAutocomplete Label="@Loc["Departments"]"
                               QuickAddComponentType="@typeof(DepartmentForm)"
                               TEntitySet="DepartmentListDTO"
                               @bind-SelectedValues="TheItem.Departments"
                               EntitySet="IdentityDepartment"
                               MultiSelect
                               QuickAddParameterName="@nameof(DepartmentForm.DepartmentName)" />

        </MudItem>


        <MudItem xs="12" sm="12" lg="12" xl="12">
            <ShiftAutocomplete Label="@Loc["Services"]"
                               QuickAddComponentType="@typeof(ServiceForm)"
                               @bind-SelectedValues="TheItem.Services"
                               TEntitySet="ServiceListDTO"
                               EntitySet="IdentityService"
                               MultiSelect
                               QuickAddParameterName="@nameof(ServiceForm.ServiceName)" />

        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <ShiftAutocomplete Label="@Loc["Brands"]"
                               QuickAddComponentType="@typeof(BrandForm)"
                               @bind-SelectedValues="TheItem.Brands"
                               TEntitySet="BrandListDTO"
                               EntitySet="IdentityBrand"
                               MultiSelect
                               QuickAddParameterName="@nameof(BrandForm.BrandName)" />
        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <LocalizedTextField @bind-Value="TheItem.Address" Label="@Loc["Address"]" For="() => TheItem.Address" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="4">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Latitude"]"
                          @bind-Value="TheItem.Latitude"
                          For="@(() => TheItem.Latitude)" />
        </MudItem>

        <MudItem xs="12" sm="6" lg="4" xl="4">
            <MudTextField ReadOnly="@ReadOnly"
                          Disabled="@Disabled"
                          OnlyValidateIfDirty="true"
                          Label="@Loc["Longitude"]"
                          @bind-Value="TheItem.Longitude"
                          For="@(() => TheItem.Longitude)" />
        </MudItem>

        <MudItem xs="12" sm="12" lg="12" xl="12">
            <FileUploader ShowThumbnail="true"
                          Label="@Loc["Photos"]"
                          For="() => TheItem.Photos"
                          AcceptImages="true"
                          @bind-Values="TheItem.Photos" />
        </MudItem>

        @if (this.TheItem.CustomFields is not null && this.TheItem.CustomFields?.Count > 0)
        {
            @foreach (var field in this.TheItem.CustomFields)
            {
                <MudItem xs="12" sm="6" lg="3" xl="3">
                    <MudTextField ReadOnly="@ReadOnly"
                                  Disabled="@Disabled"
                                  Label="@field.Value.DisplayName"
                                  Placeholder="@((field.Value.IsPassword && field.Value.HasValue)?"******":null)"
                                  InputType="@(field.Value.IsPassword?InputType.Password:InputType.Text)"
                                  @bind-Value="this.TheItem.CustomFields[field.Key].Value" />
                </MudItem>
            }
        }
    </MudGrid>
</ShiftEntityForm>

@code {
    protected override Task OnInitializedAsync()
    {
        this.SetCustomFiles();

        return base.OnInitializedAsync();
    }

    private void OnTaskFinished()
    {
        this.SetCustomFiles();
    }

    private void SetCustomFiles()
    {
        foreach (var field in this.Options.CompanyBranchCustomFields)
        {
            if (this.TheItem.CustomFields?.ContainsKey(field.Key) ?? false)
                this.TheItem.CustomFields[field.Key]?.Set(field.Value);
            else
                this.TheItem.CustomFields?.TryAdd(field.Key, new CustomFieldDTO(field.Value));
        }
    }
}
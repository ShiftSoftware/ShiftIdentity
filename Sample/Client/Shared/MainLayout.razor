@using Sample.Client.Services;
@using ShiftSoftware.ShiftIdentity.Blazor.Services;
@inherits LayoutComponentBase
@inject Sample.Client.Services.StorageService StorageService
@inject NavigationManager NavManager
@inject ShiftIdentityService ShiftIdentityService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <NotAuthorized>
                    <button class="btn btn-link" @onclick="LogInAsync">Log In</button>
                </NotAuthorized>
                <Authorized>
                    <button class="btn btn-link" @onclick="LogOutAsync">Log Out</button>
                </Authorized>
            </AuthorizeView>

            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>

            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private async Task LogInAsync()
    {
        //var url = "http:localhost:5088/Auth/AuthCode";

        //var codeChallenge = await CodeVerifierService.GenerateCodeChallengeAsync();

        //var queryStrings = new Dictionary<string, object?>();
        //queryStrings.Add("AppId", "test");
        //queryStrings.Add("CodeChallenge", codeChallenge);

        //var uri = NavManager.GetUriWithQueryParameters(url, queryStrings);
        //NavManager.NavigateTo(uri);

        await ShiftIdentityService.LoginAsync();
    }

    private async Task LogOutAsync()
    {
        await StorageService.RemoveTokenAsync();
        NavManager.NavigateTo("/");
    }
}
